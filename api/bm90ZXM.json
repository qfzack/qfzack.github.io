{"title":"","date":"2025-05-07T23:33:03.484Z","date_formatted":{"ll":"May 7, 2025","L":"05/07/2025","MM-DD":"05-07"},"updated":"2025-05-07T15:33:03.484Z","content":"<blockquote>\n<p><strong>A notebook for some basic enviroment configuration in WSL2 (Ubuntu).</strong></p>\n</blockquote>\n<h1 id=\"wsl\"><strong>WSL</strong><a title=\"#wsl\" href=\"#wsl\"></a></h1>\n<p><strong>Windows Subsystem for Linux (WSL)</strong> is a feature of Windows that allows you to run a Linux environment on your Windows machine, without the need for a separate virtual machine or dual booting.</p>\n<ul>\n<li>search and install WSL(windows subsystem for linux) in windows store</li>\n<li>search and install the Ubuntu version you needed，or you can execute <code>wsl --install -d ubuntu</code> in Powershell</li>\n<li>and then the installation of Ubuntu subsystem is completed</li>\n</ul>\n<blockquote>\n<p>Node: upgrade wsl lunux kernel with <code>wsl --update</code></p>\n</blockquote>\n<ul>\n<li>use with <a href=\"https://code.visualstudio.com/\" target=\"_blank\">VS Code</a>:\n<ul>\n<li>install plugin <code>remote-wsl</code> in VS Code</li>\n<li>execute <code>code &lt;path&gt;</code> to open subsystem directory with VS Code</li>\n<li>the path of <code>code</code> tool on the Windows machine is <code>/mnt/c/Users/Qingfeng_Zhang/AppData/Local/Programs/Microsoft VS Code</code></li>\n<li>if run <code>code</code> command to get error <code>command not found: code</code>:\n<ul>\n<li>find the position of <code>code</code> tool: <code>sudo find /mnt/c/ -name &quot;code&quot; -type f 2&gt;/dev/null</code></li>\n<li>and then create symbolic links with: <code>sudo ln -s /mnt/c/Users/Qingfeng_Zhang/AppData/Local/Programs/Microsoft\\ VS\\ Code/bin/code /usr/local/bin/code</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"zsh\"><strong>Zsh</strong><a title=\"#zsh\" href=\"#zsh\"></a></h1>\n<ul>\n<li>Zsh, or Z Shell, is an extended Unix shell that serves as both an interactive command interpreter and a powerful scripting language:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install zsh</span><br><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>Oh My Zsh</code> is a popular framework for managing Zsh configuration:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c &quot;$(curl -fsSL &lt;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh&gt;)&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>modify <code>Oh My Zsh</code> configuration file <code>vi ~/.zshrc</code>, and suggest theme is <code>ZSH_THEME=&quot;ys&quot;</code></li>\n</ul>\n<h1 id=\"golang\"><strong>Golang</strong><a title=\"#golang\" href=\"#golang\"></a></h1>\n<h2 id=\"basic-enviroment-installation\">basic enviroment installation<a title=\"#basic-enviroment-installation\" href=\"#basic-enviroment-installation\"></a></h2>\n<ul>\n<li>find a appropriate golang version in <a href=\"https://go.dev/dl/\" target=\"_blank\">https://go.dev/dl/</a></li>\n<li>download golang package with wget: <code>wget https://go.dev/dl/go1.21.3.linux-amd64.tar.gz --no-check-certificate</code></li>\n<li>extract golang files with <code>tar -xzvf ./golang -zxvf go1.21.3.linux-amd64.tar.gz</code></li>\n<li>configure the golang enviroment variables:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GO111MODULE=on</span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=https://goproxy.cn,direct</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=/home/qingfeng_zhang/golang/go</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$GOROOT</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=/home/qingfeng_zhang/golang/gopath</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$GOPATH</span>/bin</span><br></pre></td></tr></table></figure>\n<ul>\n<li>install some go development tools in VS Code:\n<ul>\n<li>use shortcut key <code>ctrl+shift+p</code>to open the commands palette, and type in <code>&gt; go: install/Update Tools</code>to search and install go tools for development</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"golang-version-management\">golang version management<a title=\"#golang-version-management\" href=\"#golang-version-management\"></a></h2>\n<p><a href=\"https://github.com/moovweb/gvm\" target=\"_blank\">GVM</a> is a usefule tool to manage Go versions</p>\n<ul>\n<li>install gvm refer to <a href=\"https://github.com/moovweb/gvm\" target=\"_blank\">https://github.com/moovweb/gvm</a></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt-get install bison</span><br><span class=\"line\">bash &lt; &lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>install go1.23</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install new golang version</span></span><br><span class=\"line\">gvm install go1.23</span><br><span class=\"line\"><span class=\"comment\"># list all available golang vesions</span></span><br><span class=\"line\">gvm list</span><br><span class=\"line\"><span class=\"comment\"># use specific golang version</span></span><br><span class=\"line\">gvm use go1.23</span><br></pre></td></tr></table></figure>\n<h1 id=\"nodejs\"><strong>Nodejs</strong><a title=\"#nodejs\" href=\"#nodejs\"></a></h1>\n<p>Node.js is a JavaScript runtime environment that allows you to run JavaScript code outside of a web browser.<br>\nNPM (Node Package Manager) is the default package manager for Node.js</p>\n<ul>\n<li>install node with version v20.13.0:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download node package with specified version </span></span><br><span class=\"line\">wget https://registry.npmmirror.com/-/binary/node/v20.13.0/node-v20.13.0-linux-x64.tar.xz</span><br><span class=\"line\"><span class=\"comment\"># extract the node files, contain the npm tool</span></span><br><span class=\"line\">tar -xvf node-v20.13.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>set the symbolic link of <code>node</code> and <code>npm</code>:</p>\n<ul>\n<li><code>sudo ln -s /home/qingfeng_zhang/app/node-v20.13.0-linux-x64/bin/node /usr/local/bin/</code></li>\n<li><code>sudo ln -s /home/qingfeng_zhang/app/node-v20.13.0-linux-x64/bin/npm /usr/local/bin/</code></li>\n</ul>\n</li>\n<li>\n<p><code>n</code> is a <code>node</code> version manager:</p>\n<ul>\n<li>install with npm: <code>npm install -g n</code></li>\n<li>upgrade to the latest stable node version: <code>n stable</code></li>\n<li>or install the specified node version: <code>n v14.17.5</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"python\"><strong>Python</strong><a title=\"#python\" href=\"#python\"></a></h1>\n<h2 id=\"version-management-with-pyenv\">version management with <a href=\"https://github.com/pyenv/pyenv\">pyenv</a><a title=\"#version-management-with-pyenv\" href=\"#version-management-with-pyenv\"></a></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L &lt;https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer&gt; | bash</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=$HOME/.pyenv/bin:$PATH</span><br><span class=\"line\">eval &quot;$(pyenv init -)&quot;</span><br><span class=\"line\">eval &quot;$(pyenv virtualenv-init -)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">pyenv install 3.11</span><br><span class=\"line\">pyenv versions</span><br><span class=\"line\">pyenv global 3.11</span><br></pre></td></tr></table></figure>\n<h2 id=\"version-management-with-anaconda\">version management with Anaconda<a title=\"#version-management-with-anaconda\" href=\"#version-management-with-anaconda\"></a></h2>\n<ul>\n<li>download install file <code>Anaconda3-2021.05-Linux-x86_64.sh</code>:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L -O &lt;url&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>install Anaconda:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x Anaconda3-2023.03-1-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">./Anaconda3-2023.03-1-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n<ul>\n<li>create Python enviroment:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create --name python3.10 python=3.10</span><br></pre></td></tr></table></figure>\n<ul>\n<li>if get error about SSL certificate，ignore with:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --set ssl_verify no</span><br></pre></td></tr></table></figure>\n<ul>\n<li>see all installed enviroments:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda info --envs</span><br></pre></td></tr></table></figure>\n<ul>\n<li>use specified enviroment:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate python3.10</span><br></pre></td></tr></table></figure>\n<h1 id=\"java\"><strong>Java</strong><a title=\"#java\" href=\"#java\"></a></h1>\n<ul>\n<li>install java in Ubuntu enviroment: <a href=\"https://www.digitalocean.com/community/tutorials/install-maven-linux-ubuntu\" target=\"_blank\">https://www.digitalocean.com/community/tutorials/install-maven-linux-ubuntu</a></li>\n</ul>\n<h1 id=\"docker\"><strong>Docker</strong><a title=\"#docker\" href=\"#docker\"></a></h1>\n<h2 id=\"installation\">Installation<a title=\"#installation\" href=\"#installation\"></a></h2>\n<ul>\n<li>refer to guideline <a href=\"https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script\" target=\"_blank\">install-using-the-convenience-script</a> to install Docker in WSL subsystem</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install docker</span></span><br><span class=\"line\">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> sh get-docker.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># start docker daemon</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> service docker start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># fix non-root user can not connect to docker daemon</span></span><br><span class=\"line\"><span class=\"comment\"># https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> groupadd docker</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> usermod -aG docker <span class=\"variable\">$&#123;USER&#125;</span></span><br><span class=\"line\">su -s <span class=\"variable\">$&#123;USER&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># restart docker daemon</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> service docker restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"build-image\">Build Image<a title=\"#build-image\" href=\"#build-image\"></a></h2>\n<ul>\n<li>build with docker file in current directory</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t &lt;image_name&gt;:&lt;image-tag&gt; -f &lt;dockerfile&gt; .</span><br></pre></td></tr></table></figure>\n<ul>\n<li>push to docker image registry</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push &lt;image-registry-url&gt;/&lt;image-name&gt;:&lt;image-tag&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis-with-container\">Redis with Container<a title=\"#redis-with-container\" href=\"#redis-with-container\"></a></h2>\n<ul>\n<li>search available docker images in docker hub with <code>docker search redis</code></li>\n</ul>\n<blockquote>\n<p>check docker configuration file <code>cat ~/.docker/config.json</code></p>\n</blockquote>\n<ul>\n<li>create redis container with docker image:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">redis-server --appendonly <span class=\"built_in\">yes</span>: <span class=\"built_in\">enable</span> AOF data persistence <span class=\"keyword\">in</span> container</span></span><br><span class=\"line\">docker run -d -p 6379:6379 \\</span><br><span class=\"line\">  -v &lt;local-path&gt;:&lt;container-path&gt; \\</span><br><span class=\"line\">  redis \\</span><br><span class=\"line\">  redis-server --appendonly yes</span><br></pre></td></tr></table></figure>\n<ul>\n<li>enter to redis container: <code>docker exec -it &lt;container-id&gt; bash</code></li>\n</ul>\n<h2 id=\"jenkins-with-container\">Jenkins with container<a title=\"#jenkins-with-container\" href=\"#jenkins-with-container\"></a></h2>\n<ul>\n<li>create docker container with Jenkins image <code>jenkins/jenkins:2.263.4</code>:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  -p 9000:8080 \\</span><br><span class=\"line\">  -p 50000:50000 \\</span><br><span class=\"line\">  -v &lt;local-path&gt;:/var/jenkins_home \\</span><br><span class=\"line\">  -v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">  --name jenkins-2.263.4 \\</span><br><span class=\"line\">  jenkins/jenkins:2.263.4</span><br></pre></td></tr></table></figure>\n<h1 id=\"groovy\"><strong>Groovy</strong><a title=\"#groovy\" href=\"#groovy\"></a></h1>\n<ul>\n<li>refer to <a href=\"https://groovy-lang.org/install.html\" target=\"_blank\">https://groovy-lang.org/install.html</a> to install Groovy</li>\n<li>install java:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install default-jre</span><br><span class=\"line\">apt install default-jdk</span><br></pre></td></tr></table></figure>\n<ul>\n<li>configure JAVA_HOME variable</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64</span><br></pre></td></tr></table></figure>\n<h1 id=\"git\"><strong>Git</strong><a title=\"#git\" href=\"#git\"></a></h1>\n<h2 id=\"configuration\">Configuration<a title=\"#configuration\" href=\"#configuration\"></a></h2>\n<ul>\n<li>configure git info</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">param --global is <span class=\"keyword\">for</span> global git configuration</span></span><br><span class=\"line\">git config --global user.name &lt;username&gt;</span><br><span class=\"line\">git config --global user.email &lt;email&gt;</span><br><span class=\"line\">git config --global commit.template ~/.git-commit-template.txt</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">generate rsa key</span></span><br><span class=\"line\">ssh-keygen -t rsa -C &lt;email&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>configure multiple RSA</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &lt;email&gt; -f &quot;~/.ssh/id_rsa_personal&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"git-workflow\">Git Workflow<a title=\"#git-workflow\" href=\"#git-workflow\"></a></h2>\n<ol>\n<li>fork repo</li>\n<li>clone repo</li>\n<li><code>git remote add upstream git@github.com:&lt;user&gt;/&lt;repo-name&gt;</code>\n<ul>\n<li>use <code>git remote -v</code> to see all remote configs</li>\n</ul>\n</li>\n<li>create a new branch in local: <code>git checkout -b feature/dev</code></li>\n<li>use <code>git commit -am &quot;comment&quot;</code> to submit code change\n<ul>\n<li>if commit template is configured, run <code>git commit -a</code> will into the commit message edit page</li>\n</ul>\n</li>\n<li>push local branch to origin(fork) repo: <code>git push origin feature/dev</code></li>\n<li>check commit history with <code>git log</code></li>\n<li>if there have 2 commits and want to merge to 1, use <code>git rebase -i HEAD~2</code></li>\n<li>if the local code is behind the upstream repo, use <code>git pull upstream master --rebase</code> to sync with upstream master branch\n<ul>\n<li>the param <code>--rebase</code> will not create new commit</li>\n<li>or use <code>git fetch upstream master</code> and <code>git merge upstream/master</code></li>\n</ul>\n</li>\n<li>create pull request in Github page</li>\n<li>wait for the PR to be reviewed and merge</li>\n</ol>\n<h2 id=\"common-operation\">Common Operation<a title=\"#common-operation\" href=\"#common-operation\"></a></h2>\n<ul>\n<li>\n<p><strong>update branch name</strong></p>\n<ul>\n<li><code>git branch -m old_branch new_branch</code></li>\n<li>if the old-branch is existed in origin repo, execute <code>git push --delete origin old_branch</code> to delete it first</li>\n<li>push the new branch<code>git push origin new_branch</code></li>\n<li>connect upstream branch with local branch: <code>git branch --set-upstream-to=origin/origin-branch local-branch</code></li>\n</ul>\n</li>\n<li>\n<p><strong>configure commit template</strong></p>\n<ul>\n<li><code>git config --global commit.template ./commit_template.txt</code></li>\n</ul>\n</li>\n<li>\n<p><strong>rebase commits</strong></p>\n<ul>\n<li>use <code>git log</code> to see commit history</li>\n<li>use <code>git rebase -i HEAD~3</code> to edit the first 3 commits</li>\n<li>update <code>pick</code> to <code>squash</code> or <code>s</code>, which means to merge with previous commit</li>\n<li>save and to edit the rebase commit message</li>\n</ul>\n</li>\n<li>\n<p><strong>branch create and merge</strong></p>\n<ul>\n<li><code>git checkout -b new_branch</code>创建并切换到此分支</li>\n<li><code>git merge new_branch</code>将new_branch的变更合并到当前分支上</li>\n</ul>\n</li>\n<li>\n<p><strong>删除本地和远程分支</strong></p>\n</li>\n<li>\n<p><code>git branch -d branch_name</code></p>\n</li>\n<li>\n<p><code>git push origin --delete branch_name</code></p>\n</li>\n<li>\n<p><strong>修改commit信息</strong></p>\n<ul>\n<li><code>git commit --amend</code></li>\n</ul>\n</li>\n<li>\n<p><strong>tag为repo加标签</strong></p>\n<ul>\n<li><code>git tag -l &quot;v1.0.*&quot;</code></li>\n<li><code>git tag -a v1.0.0 -m &quot;comment&quot;</code></li>\n<li><code>git tag -a v1.0.0 &lt;commit_hash&gt;</code></li>\n<li><code>git tag v1.0.0 -n &quot;comment&quot;</code></li>\n<li><code>git tag -d v1.0.0</code></li>\n<li><code>git push origin v1.0.0</code></li>\n</ul>\n</li>\n<li>\n<p><strong>local切换upstream的branch</strong></p>\n<ul>\n<li><code>git fetch upstream</code></li>\n<li><code>git branch -a</code></li>\n<li><code>git checkout -b &lt;branch_name&gt; upstream/&lt;branch_name&gt;</code></li>\n<li><code>git branch -vv</code></li>\n</ul>\n</li>\n<li>\n<p><strong>stash暂存修改</strong></p>\n<ul>\n<li><code>git stash save &quot;stash-info&quot;</code> 保存当前的修改</li>\n<li><code>git stash list</code> 查看stash列表</li>\n<li><code>git stash apply 0</code> 使用指定的stash</li>\n<li><code>git stash drop 0</code> 删除指定的stash</li>\n<li><code>git stash show 0 -p</code> 查看指定stash内容</li>\n</ul>\n</li>\n<li>\n<p>使用HTTPS时禁用SSL验证：</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone -c http.sslVerify=false &lt;Repo_URL&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker-container\"><strong>Docker Container</strong><a title=\"#docker-container\" href=\"#docker-container\"></a></h1>\n<h2 id=\"postgres\">Postgres<a title=\"#postgres\" href=\"#postgres\"></a></h2>\n<ul>\n<li>docker启动postgres：\n<ul>\n<li>拉去postgres镜像：<code>docker pull bitnami/postgresql</code></li>\n<li>启动docker容器：<code>docker run --name postgres -e POSTGRES_PASSWORD=postgrespw -p 5432:5432 -d bitnami/postgresql</code></li>\n<li>进入容器：<code>docker exec -it &lt;imageID&gt; /bin/bash</code></li>\n<li>进入postgres：<code>psql -U postgres</code></li>\n</ul>\n</li>\n<li>docker启动postgres客户端pgadmin4：\n<ul>\n<li>拉去pgadmin镜像：<code>docker pull dpage/pgadmin4</code></li>\n<li>启动docker容器：<code>docker run -p 5050:80 -e 'PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org' -e 'PGADMIN_DEFAULT_PASSWORD=admin' -d --name pgadmin4 dpage/pgadmin4</code></li>\n</ul>\n</li>\n<li>常用命令：\n<ul>\n<li>查看当前数据库：<code>select current_database();</code>或者<code>\\l</code></li>\n<li>创建数据库：<code>CREATE DATABASE dbname;</code></li>\n<li>进入数据库：<code>\\c dbName</code></li>\n<li>查看当前用户：<code>select user;</code>or <code>\\du</code></li>\n<li>查看所有数据表：<code>\\d</code></li>\n</ul>\n</li>\n<li>wsl启动的postgres：\n<ul>\n<li>name: postgres</li>\n<li>password: postgrespw</li>\n</ul>\n</li>\n<li>data dump and restore:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pg_dump -U postgres -t ingested_commits -f /devequ-snapshoot/ingested_commits.sql poxio_datalake</span><br><span class=\"line\">psql -h 127.0.0.1 -p 5432 -U postgres -d poxio_datalake -f /devequ-snapshoot/ingested_commits.sql</span><br></pre></td></tr></table></figure>\n<h2 id=\"mongodb\">Mongodb<a title=\"#mongodb\" href=\"#mongodb\"></a></h2>\n<ul>\n<li>docker启动mongodb：\n<ul>\n<li>拉取mongo的镜像：<code>docker pull amaas-eos-drm1.cec.lab.emc.com:5033/vxraildevops/mongo:4.2.7</code></li>\n<li>启动docker容器：<code>docker run --name mongodb -p 27017:27017 -d mongo</code></li>\n<li>进入容器：<code>docker exec -it mongo /bin/bash</code></li>\n<li>进入mongo：<code>mongo -u &lt;userName&gt; -p</code></li>\n</ul>\n</li>\n<li>常用命令：\n<ul>\n<li>查询数据库：<code>show dbs</code></li>\n<li>查看当前数据库：<code>&lt;dbName&gt;</code></li>\n<li>切换数据库：<code>use &lt;dbName&gt;</code></li>\n<li>查看collections：<code>show collections</code></li>\n</ul>\n</li>\n<li>使用k8s中的mongo：\n<ul>\n<li><code>kubectl exec -i -t -n mongodb-cluster-prod deep-mongodb-cluster-prod-0 -c mongod -- sh -c &quot;(bash || ash || sh)&quot;</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 查询文档</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).find(&#123;&quot;repo&quot;: &quot;nano-service&quot;,&quot;ntId&quot;:&#123;$exists: false&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 查询数量</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).count(&#123;&quot;repo&quot;: &quot;nano-service&quot;,&quot;ntId&quot;:&#123;$exists: false&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 更新文档的字段</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).update(&#123;&quot;repo&quot;: &quot;nano-service&quot;&#125;,&#123; $set: &#123; &quot;workItemProject&quot;: &quot;&quot; &#125; &#125;)</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).updateMany(&#123;&quot;repo&quot;: &quot;nano-service&quot;&#125;,&#123; $set: &#123; &quot;workItemProject&quot;: &quot;&quot; &#125; &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除文档的字段</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).update(&#123;&quot;repo&quot;: &quot;nano-service&quot;&#125;,&#123; $unset: &#123; &quot;ntId&quot;: &quot;&quot; &#125; &#125;)</span><br><span class=\"line\">db.getCollection(&#x27;commit&#x27;).updateMany(&#123;&quot;repo&quot;: &quot;nano-service&quot;&#125;,&#123; $unset: &#123; &quot;ntId&quot;: &quot;&quot; &#125; &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">//判断字段存在</span><br><span class=\"line\">&quot;ntId&quot;:&#123;$exists: false&#125;</span><br><span class=\"line\">//判断字段等于&quot;&quot;</span><br><span class=\"line\">&quot;workItemKey&quot;:&#123;$eq: &quot;&quot;&#125;</span><br><span class=\"line\">//判断字段不等于&quot;&quot;</span><br><span class=\"line\">&quot;workItemKey&quot;:&#123;$ne: &quot;&quot;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"redis\">Redis<a title=\"#redis\" href=\"#redis\"></a></h2>\n<ul>\n<li>docker pull and run Redis image</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull redis</span><br><span class=\"line\">docker run --name redis -p 6379:6379 -d redis</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用redis cli连接redis服务</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h &lt;ip-address&gt; -p &lt;port&gt;    </span><br></pre></td></tr></table></figure>\n<h2 id=\"grafana\">Grafana<a title=\"#grafana\" href=\"#grafana\"></a></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull grafana/grafana</span><br><span class=\"line\">docker run --name grafana -p 3000:3000 -d grafana/grafana:latest</span><br></pre></td></tr></table></figure>\n<h2 id=\"prometheus\">Prometheus<a title=\"#prometheus\" href=\"#prometheus\"></a></h2>\n<ul>\n<li>启动node-exporter</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull prom/node-exporter</span><br><span class=\"line\">docker run --name node-exporter -p 9100:9100 -v &quot;/proc:/host/proc:ro&quot; -v &quot;/sys:/host/sys:ro&quot; -v &quot;/:/rootfs:ro&quot; -d prom/node-exporter</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建配置文件<code>/opt/prometheus/prometheus.yml</code>:</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">global:</span></span><br><span class=\"line\">  <span class=\"attr\">scrape_interval:</span>     <span class=\"string\">60s</span></span><br><span class=\"line\">  <span class=\"attr\">evaluation_interval:</span> <span class=\"string\">60s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">scrape_configs:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">job_name:</span> <span class=\"string\">prometheus</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">targets:</span> [<span class=\"string\">&#x27;localhost:9090&#x27;</span>]</span><br><span class=\"line\">        <span class=\"attr\">labels:</span></span><br><span class=\"line\">          <span class=\"attr\">instance:</span> <span class=\"string\">prometheus</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">job_name:</span> <span class=\"string\">linux</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">targets:</span> [<span class=\"string\">&#x27;127.0.0.1:9100&#x27;</span>]</span><br><span class=\"line\">        <span class=\"attr\">labels:</span></span><br><span class=\"line\">          <span class=\"attr\">instance:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动prometheus</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull bitnami/prometheus</span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name prometheus  -d \\\\</span><br><span class=\"line\">    -p 9090:9090 \\\\</span><br><span class=\"line\">    -v /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  \\\\</span><br><span class=\"line\">    bitnami/prometheus</span><br></pre></td></tr></table></figure>\n<ul>\n<li>config file path:\n<ul>\n<li><code>\\\\\\\\wsl.localhost\\\\Ubuntu\\\\home\\\\qingfeng_zhang\\\\wsl_project\\\\vxrail-docker-library\\\\projects\\\\_\\\\vxraildevops\\\\prometheus\\\\deploy\\\\etc\\\\prometheus.yml</code></li>\n<li>/etc/prometheus/prometheus.yml</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"kubernetes\"><strong>Kubernetes</strong><a title=\"#kubernetes\" href=\"#kubernetes\"></a></h1>\n<h2 id=\"minikube\">minikube<a title=\"#minikube\" href=\"#minikube\"></a></h2>\n<ul>\n<li>安装minikube - <a href=\"https://minikube.sigs.k8s.io/docs/start/\" target=\"_blank\">https://minikube.sigs.k8s.io/docs/start/</a></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -LO &lt;https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64&gt;</span><br><span class=\"line\">sudo install minikube-linux-amd64 /usr/local/bin/minikube</span><br></pre></td></tr></table></figure>\n<h2 id=\"kubectl\">kubectl<a title=\"#kubectl\" href=\"#kubectl\"></a></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get events  #查看集群事件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>获取pods信息</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pods</span><br><span class=\"line\">kubectl get pods --all-namespaces</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">获取pod详细信息</span></span><br><span class=\"line\">kubectl get pods -o wide</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">获取yaml格式的资源配置</span></span><br><span class=\"line\">kubectl get po &lt;podname&gt; -o yaml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建资源</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl create deployment my-deployment --image=imageName  #创建deployment</span><br><span class=\"line\">kubectl expose deployment my-deployment --type=LoadBalancer --port=8080  #创建service，将pod暴露给公网</span><br><span class=\"line\">kubectl apply -f config.yaml  #根据yaml配置文件创建或更新资源</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除资源</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl delete pod pod-name  #删除pod</span><br><span class=\"line\">kubectl delete pod pod-name -n namespace</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl delete service serviceName  #删除service</span><br><span class=\"line\">kubectl delete deployment deploymentName  #删除deployment</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl delete pod &lt;pod-name&gt; -n merico-prod --force --grace-period=0  #强制删除</span><br></pre></td></tr></table></figure>\n<ul>\n<li>describe</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl describe nodes my-node  #查看node的详细信息</span><br><span class=\"line\">kubectl describe pods my-node  #查看pod的详细信息</span><br></pre></td></tr></table></figure>\n<ul>\n<li>扩容</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl scale deployment my-deployment --replicas=0</span><br><span class=\"line\">kubectl scale deployment my-deployment --replicas=1 -n namespace</span><br></pre></td></tr></table></figure>\n<ul>\n<li>pod日志</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl logs podName</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl set image -n nameSpace deployment/my-deployment my-deployment=imageName  #修改deployment的image,可选image,resources,selector,subject</span><br></pre></td></tr></table></figure>\n<ul>\n<li>清理无效的pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl delete pods --field-selector=status.phase=Failed</span><br></pre></td></tr></table></figure>\n<h2 id=\"helm\">helm<a title=\"#helm\" href=\"#helm\"></a></h2>\n<ul>\n<li>chart代表helm包</li>\n<li>repository用来存放和共享chart</li>\n<li>release是运行在kubernetes中的chart实例</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget &lt;https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf  helm-v3.12.0-linux-amd64.tar.gz</span><br><span class=\"line\">sudo mv linux-amd64  /usr/local/bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"k9s\">K9s<a title=\"#k9s\" href=\"#k9s\"></a></h2>\n<ul>\n<li>k8s管理工具，类似Lens，但是是命令行使用的</li>\n<li>install:</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget &lt;https://github.com/derailed/k9s/releases/download/v0.27.4/k9s_Linux_amd64.tar.gz&gt;</span><br><span class=\"line\">tar -zxf k9s_Linux_amd64.tar.gz -C /usr/local/bin</span><br></pre></td></tr></table></figure>\n<h2 id=\"ocp-tool\">OCP tool<a title=\"#ocp-tool\" href=\"#ocp-tool\"></a></h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/bin &amp;&amp; cd ~/bin</span><br><span class=\"line\">curl -kO https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.13.8/openshift-client-linux.tar.gz</span><br><span class=\"line\">tar xzvf openshift-client-linux.tar.gz</span><br><span class=\"line\">rm openshift-client-linux.tar.gz</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">rm</span> kubectl <span class=\"keyword\">if</span> you don<span class=\"string\">&#x27;t want the kubectl that comes with oc</span></span></span><br></pre></td></tr></table></figure>\n<h1 id=\"swagger\"><strong>Swagger</strong><a title=\"#swagger\" href=\"#swagger\"></a></h1>\n<ul>\n<li>swagger tools in golang is swaggo</li>\n<li><a href=\"https://github.com/swaggo/swag/blob/master/README_zh-CN.md\" target=\"_blank\">https://github.com/swaggo/swag/blob/master/README_zh-CN.md</a></li>\n<li>update swagger docs</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swag init -g hooks.go -d ./internal/pkg/api-machinery/api/v3/hooks -o ./api/api-machinery/docs --parseDependency true</span><br></pre></td></tr></table></figure>\n<h1 id=\"sonarqube\"><strong>Sonarqube</strong><a title=\"#sonarqube\" href=\"#sonarqube\"></a></h1>\n<h2 id=\"sonar-scan\">sonar scan<a title=\"#sonar-scan\" href=\"#sonar-scan\"></a></h2>\n<ul>\n<li>install path: <code>/opt/sonar-scanner</code></li>\n<li>test with local sonar cli</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sonar-scanner \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.host.url=&#123;sonar_server&#125;&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.projectKey=&#123;project_key&#125;&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.projectName=&#123;project_name&#125;&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.sources=.&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.tests=.&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.test.inclusions=**/*_test.go&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.go.coverage.reportPaths=../coverage.out&#x27; \\\\</span><br><span class=\"line\">    &#x27;-Dsonar.go.tests.reportPaths=report.xml&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"minio\"><strong>MinIO</strong><a title=\"#minio\" href=\"#minio\"></a></h1>\n<ul>\n<li>MinIO is an object storage solution that provide an Amazon web service S3-compatible API and supports all core S3 feature</li>\n<li><code>mc</code> commandline tool is built to operate Minio</li>\n<li>install: <a href=\"https://min.io/docs/minio/linux/reference/minio-mc.html#install-mc\" target=\"_blank\">https://min.io/docs/minio/linux/reference/minio-mc.html#install-mc</a></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &lt;https://dl.min.io/client/mc/release/linux-amd64/mc&gt; \\\\</span><br><span class=\"line\">  --create-dirs \\\\</span><br><span class=\"line\">  -o $HOME/minio-binaries/mc</span><br><span class=\"line\"></span><br><span class=\"line\">chmod +x $HOME/minio-binaries/mc</span><br><span class=\"line\">export PATH=$PATH:$HOME/minio-binaries/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>create alias for minio service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mc alias set swarm-minio &lt;http://rduvxrbldprd001.isus.emc.com:8080&gt; kkhQ40VmQGwq1zzf M8ciRJfBTZSHf5EApMagFo0zLbBNvQBU</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>usage</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mc ls swarm-minio                     #list buckets in minio</span><br><span class=\"line\">mc ls swarm-minio/deep-merico-backup  #list buckets objects in minio</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mc rm --recursive &lt;ALIAS&gt;/&lt;BUCKET&gt;/&lt;FOLDER&gt; --force --versions #force delete all version folder and files recursively</span><br></pre></td></tr></table></figure>\n<h1 id=\"ocp-cluster\"><strong>OCP Cluster</strong><a title=\"#ocp-cluster\" href=\"#ocp-cluster\"></a></h1>\n<ul>\n<li>Ingress: *.nginx.demo-partners.k8s.cec.delllabs.net</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oc login -u &lt;login_id&gt; -p &lt;password&gt; api.demo-partners.k8s.cec.delllabs.net:6443</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oc login --token=sha256~AlCjDxGwmfYTMS-1_jYXevKCKwEQNT0Zb-ld42RIKEw --server=https://api.primarystorage-stage-drm.k8s.cec.delllabs.net:6443</span><br><span class=\"line\">oc projects</span><br></pre></td></tr></table></figure>\n","link":"notes","plink":"https://qfzack.github.io/notes/","toc":[{"id":"wsl","title":"WSL","index":"1"},{"id":"zsh","title":"Zsh","index":"2"},{"id":"golang","title":"Golang","index":"3","children":[{"id":"basic-enviroment-installation","title":"basic enviroment installation","index":"3.1"},{"id":"golang-version-management","title":"golang version management","index":"3.2"}]},{"id":"nodejs","title":"Nodejs","index":"4"},{"id":"python","title":"Python","index":"5","children":[{"id":"version-management-with-pyenv","title":"version management with pyenv","index":"5.1"},{"id":"version-management-with-anaconda","title":"version management with Anaconda","index":"5.2"}]},{"id":"java","title":"Java","index":"6"},{"id":"docker","title":"Docker","index":"7","children":[{"id":"installation","title":"Installation","index":"7.1"},{"id":"build-image","title":"Build Image","index":"7.2"},{"id":"redis-with-container","title":"Redis with Container","index":"7.3"},{"id":"jenkins-with-container","title":"Jenkins with container","index":"7.4"}]},{"id":"groovy","title":"Groovy","index":"8"},{"id":"git","title":"Git","index":"9","children":[{"id":"configuration","title":"Configuration","index":"9.1"},{"id":"git-workflow","title":"Git Workflow","index":"9.2"},{"id":"common-operation","title":"Common Operation","index":"9.3"}]},{"id":"docker-container","title":"Docker Container","index":"10","children":[{"id":"postgres","title":"Postgres","index":"10.1"},{"id":"mongodb","title":"Mongodb","index":"10.2"},{"id":"redis","title":"Redis","index":"10.3"},{"id":"grafana","title":"Grafana","index":"10.4"},{"id":"prometheus","title":"Prometheus","index":"10.5"}]},{"id":"kubernetes","title":"Kubernetes","index":"11","children":[{"id":"minikube","title":"minikube","index":"11.1"},{"id":"kubectl","title":"kubectl","index":"11.2"},{"id":"helm","title":"helm","index":"11.3"},{"id":"k9s","title":"K9s","index":"11.4"},{"id":"ocp-tool","title":"OCP tool","index":"11.5"}]},{"id":"swagger","title":"Swagger","index":"12"},{"id":"sonarqube","title":"Sonarqube","index":"13","children":[{"id":"sonar-scan","title":"sonar scan","index":"13.1"}]},{"id":"minio","title":"MinIO","index":"14"},{"id":"ocp-cluster","title":"OCP Cluster","index":"15"}]}