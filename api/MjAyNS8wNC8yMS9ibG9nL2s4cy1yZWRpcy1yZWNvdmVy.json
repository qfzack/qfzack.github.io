{"title":"记一次redis-operator的恢复","date":"2025-04-22T05:00:00.000Z","date_formatted":{"ll":"Apr 22, 2025","L":"04/22/2025","MM-DD":"04-22"},"author":"Qingfeng Zhang","link":"2025/04/21/blog/k8s-redis-recover","categories":["Kubernetes"],"updated":"2025-05-07T15:33:02.905Z","content":"<h2 id=\"1.问题背景\">1.问题背景<a title=\"#1.问题背景\" href=\"#1.问题背景\"></a></h2>\n<p>下午刚进完PR完成了version bump并升级线上的helm chart，发现有些service没有起来，仔细看下才发现redis服务刚好挂了，而且是个比较奇怪的问题导致pod起不来，而没有起来的service是配置服务，需要redis的数据，而其他的service又依赖于这个配置服务，进而导致服务挂了一片</p>\n<blockquote>\n<p>其实这个配置服务不应该完全依赖redis，要能重建缓存，也可能是有我还没发现的细节</p>\n</blockquote>\n<h2 id=\"2.临时方案\">2.临时方案<a title=\"#2.临时方案\" href=\"#2.临时方案\"></a></h2>\n<p>需要先让redis起来，其他的服务才能够正常启动，redis的问题可以后面再排查，这里有考虑了几个点：</p>\n<ol>\n<li>之前的redis服务使用了PVC，并且使用RDB方式进行了持久化，数据放在/data路径下，为避免数据丢失，先对PV做一个volumeSnapshot</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">snapshot.storage.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">VolumeSnapshot</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">redis-data-snapshot</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">volumeSnapshotClassName:</span> <span class=\"string\">&lt;snapclass&gt;</span> <span class=\"comment\">#避免敏感信息</span></span><br><span class=\"line\">  <span class=\"attr\">source:</span></span><br><span class=\"line\">    <span class=\"attr\">persistentVolumeClaimName:</span> <span class=\"string\">redis-pvc</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>创建一个redis pod来挂载这个PVC并以RDB方式启动来重建缓存数据</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">redis-pod</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:7</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [ <span class=\"string\">&quot;redis-server&quot;</span>, <span class=\"string\">&quot;--appendonly&quot;</span>, <span class=\"string\">&quot;no&quot;</span> ]</span><br><span class=\"line\">    <span class=\"attr\">volumeMounts:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis-data</span></span><br><span class=\"line\">      <span class=\"attr\">mountPath:</span> <span class=\"string\">/data</span></span><br><span class=\"line\">  <span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis-data</span></span><br><span class=\"line\">    <span class=\"attr\">persistentVolumeClaim:</span></span><br><span class=\"line\">      <span class=\"attr\">claimName:</span> <span class=\"string\">redis-pvc</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其实这里用deployment更好，pod失败可以自动重启</p>\n</blockquote>\n<ol start=\"3\">\n<li>因为集群内部是通过DNS对redis服务进行访问的，因此再创建一个service来指向这个pod</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">      <span class=\"attr\">targetPort:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">ClusterIP</span></span><br></pre></td></tr></table></figure>\n<p>这样就可以使用<code>redis.&lt;namespace&gt;.svc.cluster.local:6379</code>来连接redis服务，并且保证这个连接和之前一样，不用修改其他服务的配置</p>\n<p>这样一来我的服务都恢复了，但是这只是一个临时方案，我任然需要一个redis-operator来提供更可靠的redis服务</p>\n<h2 id=\"3.问题排查\">3.问题排查<a title=\"#3.问题排查\" href=\"#3.问题排查\"></a></h2>\n<p>原来redis pod的报错已经很清楚了，在redis配置文件的第17行指定的REDIS-PORT的值应该是6379，但是实际的值带有IP，这导致redis服务无法启动</p>\n<p>然后找到这个环境变量的设置是在docker image内的一个脚本里，但是这个服务的配置已经很久没有更新了，而这个问题是最近突然出现的，就比较奇怪</p>\n<h2 id=\"4.服务恢复\">4.服务恢复<a title=\"#4.服务恢复\" href=\"#4.服务恢复\"></a></h2>\n<h3 id=\"4.1.redis升级部署\">4.1.redis升级部署<a title=\"#4.1.redis升级部署\" href=\"#4.1.redis升级部署\"></a></h3>\n<p>我使用的<a href=\"https://github.com/OT-CONTAINER-KIT/redis-operator\" target=\"_blank\">redis operator</a>的版本有更新的，于是再创建一个namespace，在这个新的namespace里来部署最新版本的redis-operator</p>\n<p>部署的过程在github repo中已经写的很清楚了，我使用的是standalone模式，使用helm安装redis-manager来在k8s集群上安装CRD、RBAC和operator，然后再用helm安装redis来创建CR的实例，这样起来的redis的数据是空的</p>\n<h3 id=\"4.2.redis数据恢复\">4.2.redis数据恢复<a title=\"#4.2.redis数据恢复\" href=\"#4.2.redis数据恢复\"></a></h3>\n<p>原来的redis数据还在PVC中，在原来的namespace创建一个相同的工具pod使用相同的PVC，启动之后的工具pod有相同的redis数据：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">redis-pod</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">redis:7</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [ <span class=\"string\">&quot;redis-server&quot;</span>, <span class=\"string\">&quot;--appendonly&quot;</span>, <span class=\"string\">&quot;no&quot;</span> ]</span><br><span class=\"line\">    <span class=\"attr\">volumeMounts:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis-data</span></span><br><span class=\"line\">      <span class=\"attr\">mountPath:</span> <span class=\"string\">/data</span></span><br><span class=\"line\">  <span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">redis-data</span></span><br><span class=\"line\">    <span class=\"attr\">persistentVolumeClaim:</span></span><br><span class=\"line\">      <span class=\"attr\">claimName:</span> <span class=\"string\">redis-pvc</span></span><br></pre></td></tr></table></figure>\n<p>然后从这个pod中导出redis的rdb格式的数据到本地：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">cp</span> redis-recover:/data/dump.rdb ./dump-from-snapshot.rdb -n redis-old</span><br></pre></td></tr></table></figure>\n<p>接下来在新的namespace中创建一个相同的工具pod，并挂载和新的redis服务相同的PVC，这里使用的PV还是空的，然后导出的RDB数据通过工具pod导入到新的redis PVC中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">cp</span> ./dump-from-snapshot.rdb redis-recover:/data/dump.rdb -n redis-new</span><br></pre></td></tr></table></figure>\n<p>不出意外的话重启新的redis服务让其读取RBD的数据，然后删除工具pod就完事了，但是出现了意外：<em>redis operator的cotroller逻辑是自己写的并且没有提供配置持久化方式的参数，并且默认的持久化方式是AOF，刚才导入的rdb数据无法生效</em></p>\n<p>这里即使手动修改了redis的持久化方式，在重启pod之后还是会失效</p>\n<blockquote>\n<p>不确定是否支持配置RDB，至少在helm的配置里没有看到</p>\n</blockquote>\n<p>于是前面导出的RDB数据没用了，进到旧的namespace的工具pod里，使用redis-cli查看和更改持久化的方式为AOF：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -a Sm4rtcl0ud! CONFIG GET appendonly</span><br><span class=\"line\">redis-cli -a Sm4rtcl0ud! CONFIG SET appendonly no</span><br><span class=\"line\">redis-cli -a Sm4rtcl0ud! CONFIG SET appendonly <span class=\"built_in\">yes</span></span><br></pre></td></tr></table></figure>\n<p>这样工具pod的redis就会重新把数据写到一个AOF文件中，然后再导出这个文件并导入到新的namespace的工具pod中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">cp</span> redis-recover:/data/appendonly.aof ./appendonly.aof -n redis-old</span><br><span class=\"line\">kubectl <span class=\"built_in\">cp</span> ./appendonly.aof redis-recover:/data/appendonly.aof -n redis-new</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>也有相关的工具可以实现redis的AOF文件和RDB文件之间的转换</p>\n</blockquote>\n<p>因为是和工具pod使用相同的PVC，所以新的redis服务可以读取到相同的AOF文件挂载在/data下</p>\n<p>接下来再重启新的redis pod就会读取并加载AOF文件的数据到内存中了，这样新的redis服务就配置好了</p>\n","next":{"title":"签名与证书","link":"2025/01/06/blog/sign_cert"},"plink":"https://qfzack.github.io/2025/04/21/blog/k8s-redis-recover/","toc":[{"id":"1.问题背景","title":"1.问题背景","index":"1"},{"id":"2.临时方案","title":"2.临时方案","index":"2"},{"id":"3.问题排查","title":"3.问题排查","index":"3"},{"id":"4.服务恢复","title":"4.服务恢复","index":"4","children":[{"id":"4.1.redis升级部署","title":"4.1.redis升级部署","index":"4.1"},{"id":"4.2.redis数据恢复","title":"4.2.redis数据恢复","index":"4.2"}]}],"reading_time":"1347 words in 9 min"}